name: Tests

on:
  push:
  pull_request:
    branches:
    - master

jobs:
  check_duplicate_runs:
    name: Check for duplicate runs
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        concurrent_skipping: same_content_newer
        cancel_others: true
        skip_after_successful_duplicate: false
        paths_ignore: '["**/README.md", "**/LICENSE"]'
        do_not_skip: '["pull_request"]'

  tests:
    name: Run tests (${{ github.event_name }}, ${{ matrix.python-version }})
    runs-on: ubuntu-18.04
    needs: [check_duplicate_runs]
    if: ${{ needs.check_duplicate_runs.outputs.should_skip != 'true' }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['2.7', '3.5', '3.6', '3.7', '3.8', '3.9', '3.10']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('requirements*.txt') }}
          ${{ runner.os }}-python-${{ matrix.python-version }}-pip-
          ${{ runner.os }}-python
          ${{ runner.os }}-

    - name: Upgrade pip
      run: python -m pip install --upgrade pip setuptools wheel

    - name: Install dependencies
      run: pip install -I -r requirements.txt -r requirements-test.txt

    - name: Run flake8
      run: flake8 --count --max-line-length=120 .

    - name: Build package
      run: python setup.py bdist_wheel sdist

    - name: Run tests
      run: |
        mkdir reports/
        pip install dist/*.whl
        coverage run -m pytest --reruns 5

    - name: Combine coverage
      run: |
        coverage combine
        coverage xml -o reports/coverage-${{ matrix.python-version }}.xml -i

    - name: Upload coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-${{ matrix.python-version }}
        path: reports/coverage-${{ matrix.python-version }}.xml

  all_done:
    name: Tests done (${{ github.event_name }})
    runs-on: ubuntu-latest
    needs: [tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download all coverage reports
      uses: actions/download-artifact@v2
      with:
        path: reports

    - name: Move coverage reports to the root folder
      run: find reports -type f -exec mv '{}' reports \;

    - name: Check coverage
      uses: codecov/codecov-action@v2
      with:
        directory: ./reports
        fail_ci_if_error: true

    - name: All done
      run: echo 1
